{"version":3,"sources":["components/MainComponent.js","AppRouter.js","components/navigation/NavigationElements.js","components/navigation/NavigationHeader.js","App.js","registerServiceWorker.js","index.js"],"names":["Main","Grid","container","direction","spacing","justify","alignItems","className","item","Typography","variant","align","React","Component","AppRouter","exact","path","component","NavigationElements","Link","href","School","fontSize","style","width","height","GitHub","Twitter","Language","NavigationHeader","Avatar","alt","src","theme","createMuiTheme","palette","primary","blue","secondary","red","typography","useNextVariants","App","CssBaseline","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e51a9bde.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\n// Main component of the Application that displays all content dependant on the Controls State\nclass Main extends React.Component {\n  // Render the Main Content and call other Elements\n  render() {\n    return (\n      <Grid\n          container\n          direction='column'\n          spacing={1}\n          justify=\"top\"\n          alignItems=\"center\"\n          className=\"mainContent\">\n        <Grid item className=\"mainItem\">\n          <Typography variant=\"h6\" align=\"center\">\n            Alex Bäuerle\n          </Typography>\n        </Grid>\n        <Grid item className=\"mainItem\">\n          <Typography align=\"center\">\n            I am a Ph. D. student at Ulm University. When I am not in front of my\n            computer, you will probably find me in the mountains.\n          </Typography>\n        </Grid>\n        <Grid item className=\"mainItem\">\n          <Typography align=\"center\">\n            My research is on visualization and explainability for neural\n            networks.\n            In this context, I am always interested in new methods to better\n            understand neural networks.\n            I try to help developers in this area with techniques that helps\n            them communicate and develop new approaches.\n            For consumers of AI-powered applications, I work on visualizations\n            that help them understand the decision that these algorithms make.\n            If you are interested in my research, check out my scholar account.\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Main;\n","import * as React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Main from './components/MainComponent';\n\n// AppRouter Calling other Components dependant on Route\nclass AppRouter extends React.Component {\n  render() {\n    return (\n      <div className='content'>\n        <Router>\n          <div className='full'>\n            <Route exact path=\"/\" component={Main} />\n          </div>\n        </Router>\n      </div>\n    );\n  }    \n}\n\nexport default AppRouter;\n","import React from 'react';\nimport { Grid, Link } from '@material-ui/core';\nimport { School, GitHub, Twitter, Language } from '@material-ui/icons';\n\n\nclass NavigationElements extends React.Component {\n  render() {\n    return (\n      <Grid\n          container\n          direction='row'\n          spacing={1}\n          justify=\"center\"\n          alignItems=\"center\">\n        <Grid item>\n          <Link href=\"https://scholar.google.com/citations?user=131euyAAAAAJ&hl=en&oi=ao\">\n            <School\n                fontSize=\"inherit\"\n                style={{\n                  width: 30,\n                  height: 30\n                }} />\n          </Link>\n        </Grid>\n        <Grid item>\n          <Link href=\"https://www.github.com/sparkier\">\n            <GitHub\n                fontSize=\"inherit\"\n                style={{\n                  width: 30,\n                  height: 30\n                }} />\n          </Link>\n        </Grid>\n        <Grid item>\n          <Link href=\"https://www.twitter.com/a13xba\">\n            <Twitter\n                fontSize=\"inherit\"\n                style={{\n                  width: 30,\n                  height: 30\n                }} />\n          </Link>\n        </Grid>\n        <Grid item>\n          <Link href=\"http://uni-ulm.de/?alex-baeuerle\">\n            <Language\n                fontSize=\"inherit\"\n                style={{\n                  width: 30,\n                  height: 30\n                }} />\n          </Link>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default NavigationElements;\n","import React from 'react';\nimport { Grid, Avatar } from '@material-ui/core';\nimport NavigationElements from './NavigationElements';\n\nclass NavigationHeader extends React.Component {\n  render() {\n    return (\n      <Grid\n          container\n          direction='column'\n          spacing={1}\n          justify=\"center\"\n          alignItems=\"center\"\n          className=\"navigationHead\">\n        <Grid item>\n          <Avatar\n              alt=\"Alex Bäuerle\"\n              src={process.env.PUBLIC_URL + \"alex.jpg\"}\n              style={{\n                width: 150,\n                height: 150\n              }} />\n        </Grid>\n        <Grid item>\n          <NavigationElements/>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default NavigationHeader;\n","import React from 'react';\n\nimport AppRouter from './AppRouter';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {blue, red} from '@material-ui/core/colors'\nimport NavigationHeader from './components/navigation/NavigationHeader';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: red,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\n// Render the App\n// The App provides the Store to the following components.\n// Controls as well as Routed Content are rendered.\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <div className='full'>\n      <CssBaseline />\n      <NavigationHeader/>\n      <AppRouter />\n    </div>\n  </MuiThemeProvider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport './styles/index.css';\n\n// Render the Application into the html 'root' element\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}